@page "/Login"
@using SEP3_Tier1.Authentication
@namespace SEP3_Tier1.Pages
@using Microsoft.AspNetCore.Authorization
@using SEP3_Tier1.Data.Purchase
@using SEP3_Tier1.Models
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IPurchaseService PurchaseService
@inject NavigationManager NavigationManager


<AuthorizeView>

    <NotAuthorized>
        <div class="form-group">
            <label>User name:</label>
            <input type="text" placeholder="Username" @bind-value="username"/>

        </div>
        <div class="form-group">
            <label>Password</label>
            <input type="password" placeholder="Password" @bind-value="password"/>
        </div>


        <div style="color:red">@errorMessage</div>
        <a href="" @onclick="PerformLoginAsync">
            Login
        </a>

    </NotAuthorized>
    <Authorized>
        <a href="" @onclick="PerformLogoutAsync">
            Log out
        </a>
    </Authorized>
</AuthorizeView>


@code {
    private string username;
    private string password;
    private string errorMessage;


    public async Task PerformLoginAsync()
    {
        errorMessage = "";
        try
        {
            await ((CustomAuthenticationStateProvider) AuthenticationStateProvider).ValidateLoginAsync(username, password);
            username = "";
            password = "";
        }
        catch (Exception e)
        {
            errorMessage = e.Message;
        }
    }

    public async Task PerformLogoutAsync() {
        IList<BookSale> cartItems = await PurchaseService.GetCartItems();
        errorMessage = "";
        username = "";
        password = "";
        try
        {
            ((CustomAuthenticationStateProvider) AuthenticationStateProvider).Logout();
            NavigationManager.NavigateTo("/");
            cartItems.Clear();
        }
        catch (Exception e)
        {
        }
    }

}