@page "/SalesList"
@using SEP3_Tier1.Data
@using SEP3_Tier1.Models
@using Syncfusion.Blazor.Navigations
@inject ISaleService SaleService

<h3>SalesList</h3>

<div class="container">
    
    @if (salesToShow == null)
    {
        <p>
            <em>Loading...</em>
        </p>
    }
    else
    {
        <table class="table table-bordered">
            <thead>
            <tr>
                <th>Title</th>
                <th>Author</th>
                <th>Edition</th>
                <th>Condition</th>
                <th>Subject</th>
                <th>Image</th>
                <th>Price</th>
                <th>HardCopy</th>
                <th>Username</th>
                <th>Id</th>
                <th>Delete</th>

            </tr>
            </thead>
            <tbody>
            @foreach (BookSale item in salesToShow)
            {
                <tr>
                    <td>@item.title</td>
                    <td>@item.author</td>
                    <td>@item.edition</td>
                    <td>@item.condition</td>
                    <td>@item.subject</td>
                    <td>@item.image</td>
                    <td>@item.price</td>
                    <td>@item.hardCopy</td>
                    <td>@item.username</td>
                    <td>@item.bookSaleID</td>
                    <td><button @onclick="@(() => DeleteSale(item.bookSaleID))"></button></td>
                </tr>
            }
            </tbody>
        </table>}
</div>

@code{


    private IList<BookSale> allSales;
    private IList<BookSale> salesToShow;
    
    

    /*protected override async Task OnInitializedAsync() {
        IList<BookSale> itemToShow = await SaleService.GetAllBookSales();
        Console.WriteLine(itemToShow);
        //allSales.Add(itemToShow);
        Console.WriteLine(allSales);
        salesToShow = allSales;
        Console.WriteLine(salesToShow + "\n" + allSales);
    }*/

    private async Task DeleteSale(int id) {
        BookSale toRemove = salesToShow.First(t => t.bookSaleID == id);
        await SaleService.RemoveSaleAsync(id);
        salesToShow.Remove(toRemove);

    }

    protected override async Task OnInitializedAsync()
    {
        //Console.WriteLine(SaleService.GetAllBookSales() + "\t ooga booga");
        allSales = await SaleService.GetAllBookSales();
        salesToShow = allSales;

    }

}