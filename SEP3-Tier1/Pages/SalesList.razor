@page "/SalesList"
@using SEP3_Tier1.Data
@using SEP3_Tier1.Models
@using Syncfusion.Blazor.Navigations
@using Syncfusion.Blazor.Grids
@using SEP3_Tier1.Authentication
@inject ISaleService SaleService
@inject IPurchaseService PurchaseService

<h3>SalesList</h3>

<div class="container">
    @if (salesToShow == null)
    {
        <p>
            <em>Loading...</em>
        </p>
    }
    else
    {
        <table class="table table-bordered">
            <thead>
            <tr>
                <th>Title</th>
                <th>Author</th>
                <th>Edition</th>
                <th>Condition</th>
                <th>Subject</th>
                <th>Image</th>
                <th>Price</th>
                <th>HardCopy</th>
                <th>Seller</th>
                <th>Id</th>
                <th>AddToCart</th>
                <th>Update</th>
                <th>Delete</th>

            </tr>
            </thead>
            <tbody>
            
            @for (int i = 0; i < salesToShow.Count; i++) {
                int localI = i;
                <tr contenteditable="true" name="">
                    <td>@salesToShow[i].title</td>
                    <td>@salesToShow[i].author</td>
                    <td>@salesToShow[i].edition</td>
                    <td>@salesToShow[i].condition</td>
                    <td>@salesToShow[i].subject</td>
                    <td>@salesToShow[i].image</td>
                    <td>@salesToShow[i].price</td>
                    <td>@salesToShow[i].hardCopy</td>
                    <td>@salesToShow[i].username</td>
                    <td>@salesToShow[i].bookSaleID</td>
                    <td><button @onclick="@(() => AddToCart(salesToShow[localI]))">Add To Cart</button>@if (errorValue) { @errorMessage }</td>
                    <td><button @onclick="@(() => UpdateSale(salesToShow[localI]))"></button></td>
                    <td><button @onclick="@(() => DeleteSale(salesToShow[localI].bookSaleID))"></button></td>
                </tr>
            }
            </tbody>
        </table>}
   
    
   
</div>



@code{


    private IList<BookSale> allSales;
    private IList<BookSale> salesToShow;
    private bool errorValue;
    private string errorMessage = "";

    private async Task AddToCart(BookSale bookSale)
    {
        if (bookSale.username.Equals(CustomAuthenticationStateProvider.cachedUser.username)) {
            errorValue = true;
            errorMessage = "Cannot add own sale to cart";
        }
        else {
            errorValue = false;
            await PurchaseService.AddToCartAsync(bookSale);
        }
    }

    private async Task DeleteSale(int id) {
        BookSale toRemove = salesToShow.First(t => t.bookSaleID == id);
        await SaleService.RemoveSaleAsync(id);
        salesToShow.Remove(toRemove);
    }

    private async Task UpdateSale(BookSale saleToUpdate) {
        
    }

    protected override async Task OnInitializedAsync()
    {
        allSales = await SaleService.GetBookSaleAsync("");
        salesToShow = allSales;
    }

}